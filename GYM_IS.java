/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gym_is;

import java.awt.Color;
import java.awt.Desktop;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class GYM_IS extends javax.swing.JFrame {
int memberID = 1001;
DefaultTableModel dm;

    /**
     * Creates new form gymIS_GUI
     * 
     */
    public GYM_IS() {
        initComponents();
        viewMember_tab.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        buttonGroup = new javax.swing.ButtonGroup();
        buttonGroups2 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        addPanel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        viewPanel = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        bossContainer = new javax.swing.JPanel();
        addMember_tab = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        age = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        gender = new javax.swing.JLabel();
        phonenumber = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        membership = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        phonenumberField = new javax.swing.JTextField();
        priceField = new javax.swing.JTextField();
        female = new javax.swing.JRadioButton();
        male = new javax.swing.JRadioButton();
        other = new javax.swing.JRadioButton();
        addressField = new javax.swing.JTextField();
        membershipCombo = new javax.swing.JComboBox<>();
        addMember = new javax.swing.JButton();
        priceTitle = new javax.swing.JLabel();
        ageField = new javax.swing.JTextField();
        clearFields = new javax.swing.JButton();
        viewMember_tab = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainTable = new javax.swing.JTable();
        membershipCombo2 = new javax.swing.JComboBox<>();
        searchButton2 = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jMenuBar2 = new javax.swing.JMenuBar();
        file_menu = new javax.swing.JMenu();
        import_file_menu = new javax.swing.JMenuItem();
        help_menu = new javax.swing.JMenu();
        exit_menu = new javax.swing.JMenu();

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(29, 49, 29)));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(151, 188, 98));

        addPanel.setBackground(new java.awt.Color(23, 45, 24));
        addPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addPanelMouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("ADD NEW MEMBER");

        javax.swing.GroupLayout addPanelLayout = new javax.swing.GroupLayout(addPanel);
        addPanel.setLayout(addPanelLayout);
        addPanelLayout.setHorizontalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap(109, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(107, 107, 107))
        );
        addPanelLayout.setVerticalGroup(
            addPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        viewPanel.setBackground(new java.awt.Color(44, 94, 45));
        viewPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                viewPanelMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 15)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("VIEW MEMBERS ");

        javax.swing.GroupLayout viewPanelLayout = new javax.swing.GroupLayout(viewPanel);
        viewPanel.setLayout(viewPanelLayout);
        viewPanelLayout.setHorizontalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(122, 122, 122))
        );
        viewPanelLayout.setVerticalGroup(
            viewPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        bossContainer.setBackground(new java.awt.Color(151, 188, 98));

        addMember_tab.setBackground(new java.awt.Color(151, 188, 98));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(29, 49, 29));
        jLabel2.setText("ADD NEW MEMBER");

        age.setFont(new java.awt.Font("Microsoft YaHei", 1, 15)); // NOI18N
        age.setForeground(new java.awt.Color(29, 49, 29));
        age.setText("AGE ");

        name.setFont(new java.awt.Font("Microsoft YaHei", 1, 15)); // NOI18N
        name.setForeground(new java.awt.Color(29, 49, 29));
        name.setText("NAME");

        gender.setFont(new java.awt.Font("Microsoft YaHei", 1, 15)); // NOI18N
        gender.setForeground(new java.awt.Color(29, 49, 29));
        gender.setText("GENDER");

        phonenumber.setFont(new java.awt.Font("Microsoft YaHei", 1, 15)); // NOI18N
        phonenumber.setForeground(new java.awt.Color(29, 49, 29));
        phonenumber.setText("PHONE NUMBER");

        jLabel10.setFont(new java.awt.Font("Microsoft YaHei", 1, 15)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(29, 49, 29));
        jLabel10.setText("ADDRESS");

        membership.setFont(new java.awt.Font("Microsoft YaHei", 1, 15)); // NOI18N
        membership.setForeground(new java.awt.Color(29, 49, 29));
        membership.setText("SELECT MEMBERSHIP");

        nameField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(29, 49, 29)));
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        phonenumberField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        phonenumberField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(29, 49, 29)));
        phonenumberField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phonenumberFieldActionPerformed(evt);
            }
        });

        priceField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        priceField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(29, 49, 29)));
        priceField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceFieldActionPerformed(evt);
            }
        });

        buttonGroup.add(female);
        female.setText("FEMALE");
        female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleActionPerformed(evt);
            }
        });

        buttonGroup.add(male);
        male.setText("MALE");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });

        buttonGroup.add(other);
        other.setText("OTHER");
        other.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otherActionPerformed(evt);
            }
        });

        addressField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addressField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(29, 49, 29)));
        addressField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressFieldActionPerformed(evt);
            }
        });

        membershipCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Week", "1 Month", "3 Months ", "6 Months ", "1 Year" }));
        membershipCombo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(29, 49, 29)));

        addMember.setBackground(new java.awt.Color(0, 153, 51));
        addMember.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        addMember.setForeground(new java.awt.Color(255, 255, 255));
        addMember.setText("ADD MEMBER ");
        addMember.setBorder(null);
        addMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMemberActionPerformed(evt);
            }
        });

        priceTitle.setFont(new java.awt.Font("Microsoft YaHei", 1, 15)); // NOI18N
        priceTitle.setForeground(new java.awt.Color(29, 49, 29));
        priceTitle.setText("PRICE (Rs.)");

        ageField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ageField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(29, 49, 29)));
        ageField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageFieldActionPerformed(evt);
            }
        });

        clearFields.setBackground(new java.awt.Color(153, 0, 0));
        clearFields.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clearFields.setForeground(new java.awt.Color(255, 255, 255));
        clearFields.setText("Clear");
        clearFields.setBorder(null);
        clearFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearFieldsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addMember_tabLayout = new javax.swing.GroupLayout(addMember_tab);
        addMember_tab.setLayout(addMember_tabLayout);
        addMember_tabLayout.setHorizontalGroup(
            addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMember_tabLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addMember_tabLayout.createSequentialGroup()
                        .addComponent(membership)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(membershipCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83)
                        .addComponent(addMember, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addMember_tabLayout.createSequentialGroup()
                        .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addMember_tabLayout.createSequentialGroup()
                                .addComponent(priceTitle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(priceField))
                            .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(addMember_tabLayout.createSequentialGroup()
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(addMember_tabLayout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(male, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(female)
                                    .addGap(18, 18, 18)
                                    .addComponent(other))
                                .addGroup(addMember_tabLayout.createSequentialGroup()
                                    .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                        .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(addMember_tabLayout.createSequentialGroup()
                                    .addComponent(phonenumber)
                                    .addGap(18, 18, 18)
                                    .addComponent(phonenumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addMember_tabLayout.createSequentialGroup()
                                    .addComponent(jLabel10)
                                    .addGap(18, 18, 18)
                                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(clearFields, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addMember_tabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(378, 378, 378))
        );
        addMember_tabLayout.setVerticalGroup(
            addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMember_tabLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phonenumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addMember_tabLayout.createSequentialGroup()
                        .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addMember_tabLayout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(gender, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(female)
                                    .addComponent(male)
                                    .addComponent(other))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addMember_tabLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(addressField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(71, 71, 71)))
                        .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priceTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(priceField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearFields, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addMember, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(membershipCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(membership, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(addMember_tabLayout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addGroup(addMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(age, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ageField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(51, 170, Short.MAX_VALUE))))
        );

        viewMember_tab.setBackground(new java.awt.Color(151, 188, 98));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(29, 49, 29));
        jLabel12.setText("VIEW MEMBERS");

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        searchButton.setText("SEARCH BY PRICE");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        mainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Member ID", "Name", "Gender", "Age", "Address", "Phone no", "Membership", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mainTable.setShowGrid(true);
        jScrollPane1.setViewportView(mainTable);
        if (mainTable.getColumnModel().getColumnCount() > 0) {
            mainTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            mainTable.getColumnModel().getColumn(2).setPreferredWidth(15);
            mainTable.getColumnModel().getColumn(3).setPreferredWidth(5);
            mainTable.getColumnModel().getColumn(7).setPreferredWidth(20);
        }

        membershipCombo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Week", "1 Month", "3 Months", "6 Months", "1 Year" }));
        membershipCombo2.setBorder(null);

        searchButton2.setText("SEARCH BY CATEGORY");
        searchButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton2ActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(204, 0, 0));
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout viewMember_tabLayout = new javax.swing.GroupLayout(viewMember_tab);
        viewMember_tab.setLayout(viewMember_tabLayout);
        viewMember_tabLayout.setHorizontalGroup(
            viewMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewMember_tabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(viewMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewMember_tabLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(membershipCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton)
                        .addGap(22, 22, 22))
                    .addGroup(viewMember_tabLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 856, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewMember_tabLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(viewMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewMember_tabLayout.createSequentialGroup()
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(344, 344, 344))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewMember_tabLayout.createSequentialGroup()
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );
        viewMember_tabLayout.setVerticalGroup(
            viewMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(viewMember_tabLayout.createSequentialGroup()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(viewMember_tabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(membershipCombo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteButton)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout bossContainerLayout = new javax.swing.GroupLayout(bossContainer);
        bossContainer.setLayout(bossContainerLayout);
        bossContainerLayout.setHorizontalGroup(
            bossContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bossContainerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addMember_tab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(bossContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bossContainerLayout.createSequentialGroup()
                    .addGap(25, 25, 25)
                    .addComponent(viewMember_tab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(25, 25, 25)))
        );
        bossContainerLayout.setVerticalGroup(
            bossContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addMember_tab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(bossContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(bossContainerLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(viewMember_tab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gym_is/reqfiles/gymIS_logo.jpg"))); // NOI18N
        jLabel3.setToolTipText("");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(44, 94, 45)));

        jSeparator1.setBackground(new java.awt.Color(44, 94, 45));
        jSeparator1.setForeground(new java.awt.Color(44, 94, 45));
        jSeparator1.setOpaque(true);

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bossContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(viewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(viewPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(bossContainer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        file_menu.setText("File");
        file_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                file_menuActionPerformed(evt);
            }
        });

        import_file_menu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        import_file_menu.setText("Import File");
        import_file_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                import_file_menuActionPerformed(evt);
            }
        });
        file_menu.add(import_file_menu);

        jMenuBar2.add(file_menu);

        help_menu.setText("Help");
        help_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                help_menuMouseClicked(evt);
            }
        });
        jMenuBar2.add(help_menu);

        exit_menu.setText("Exit");
        exit_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_menuMouseClicked(evt);
            }
        });
        jMenuBar2.add(exit_menu);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void viewPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_viewPanelMouseClicked
        // TODO add your handling code here:
        addPanel.setBackground(new Color(44,94,45));
        viewPanel.setBackground(new Color(23,45,24));
        viewMember_tab.setVisible(true);
        addMember_tab.setVisible(false);
    }//GEN-LAST:event_viewPanelMouseClicked

    private void addPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addPanelMouseClicked
        // TODO add your handling code here:
        viewPanel.setBackground(new Color(44,94,45));
        addPanel.setBackground(new Color(23,45,24));
        viewMember_tab.setVisible(false);
        addMember_tab.setVisible(true);
    }//GEN-LAST:event_addPanelMouseClicked

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void phonenumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phonenumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phonenumberFieldActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void priceFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_priceFieldActionPerformed

    private void femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_femaleActionPerformed

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maleActionPerformed

    private void otherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otherActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_otherActionPerformed

    private void addressFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressFieldActionPerformed
    String getGender(){
        if(male.isSelected()){
            return "MALE";
        }
        else if(female.isSelected()){
            return "FEMALE";
        }
        else if(other.isSelected()){
            return "OTHER";
        }
        else{
            return "";
        }
    }
    private void addMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMemberActionPerformed
        // TODO add your handling code here:
    try{    
        String name = nameField.getText();
        String phoneNumber = phonenumberField.getText();
        String gender = getGender();
        String age = ageField.getText();
        String address = addressField.getText();
        String membership = membershipCombo.getSelectedItem().toString();
        String price = priceField.getText();
        
       
        
        String []values = {Integer.toString(memberID),name,gender,age,address,phoneNumber,membership,price};
        int row_count = mainTable.getRowCount();
        int row_number = 0;
        //checking if values any value is null
        for(String s:values){
            if(s.equals("") || s.equals(null)){
            JOptionPane.showMessageDialog(rootPane,"Form is not completely filled","INFO",JOptionPane.INFORMATION_MESSAGE);
            return;            
        }
        }
        //value checks
        if(Long.parseLong(phoneNumber)>9999999999L){
            JOptionPane.showMessageDialog(rootPane,"Phone number cannot be more than 10 digits","INFO",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if(Integer.parseInt(age)<16){
            JOptionPane.showMessageDialog(rootPane,"Age must be 16 or more to join!","INFO",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        //for name
        boolean letteronly = name.matches("^[ A-Za-z]+$");
        if(letteronly==false){
            JOptionPane.showMessageDialog(rootPane,"Name must only contain alphabets","INFO",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        //for checking price value is integer
        try {
        int Value = Integer.parseInt(price);
        if(Value<0){
            JOptionPane.showMessageDialog(rootPane,"Price cannot be negative!","INFO",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        } 
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane,"Please input numbers in price!","INFO",JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        
        //row counting
        for(int i=0;i<row_count;i++){
            if(mainTable.getValueAt(i,0)== null){
                row_number = i;
                break;
            }
        }
        //data duplication check
        
        for(int j=0;j<row_count;j++){
            String ex_phoneNumber = (String)mainTable.getValueAt(j, 5);           
            if(phoneNumber.equals(ex_phoneNumber)){
                JOptionPane.showMessageDialog(rootPane,"DATA DUPLICATION FOUND!","ERROR!",JOptionPane.WARNING_MESSAGE);
                return;
            }
        }  
        //Adding Empty Row
        DefaultTableModel tableModel = (DefaultTableModel) mainTable.getModel();
        tableModel.addRow(new Object[]{null});
        //Adding Values in the table
        for( int i =0; i < mainTable.getColumnCount(); i++){
            mainTable.setValueAt(values[i], row_count, i);
            
        }
        memberID++;
        JOptionPane.showMessageDialog(rootPane,"SAVED!","INFO",JOptionPane.INFORMATION_MESSAGE);
        clear();
        
      
    }
    catch(Exception e){
       JOptionPane.showMessageDialog(rootPane,"Invalid Input","INFO",JOptionPane.INFORMATION_MESSAGE); 
    }
    }//GEN-LAST:event_addMemberActionPerformed
    private void clear(){
        nameField.setText("");
        phonenumberField.setText("");
        priceField.setText("");
        addressField.setText("");
        ageField.setText("");
        buttonGroup.clearSelection();
    }
    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void file_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_file_menuActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_file_menuActionPerformed

    private void import_file_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_import_file_menuActionPerformed
        // TODO add your handling code here:
        JFileChooser filechooser= new JFileChooser();    
        int response = filechooser.showOpenDialog(null);//selection of file
        if(response == JFileChooser.APPROVE_OPTION){
            String file_path = filechooser.getSelectedFile().getAbsolutePath();
           
            File DB = new File(file_path); 
       
        try {
            BufferedReader br = new BufferedReader(new FileReader(DB));
              Object[] tableLines = br.lines().toArray();
              DefaultTableModel model = (DefaultTableModel)mainTable.getModel();

                // extratct data from lines
                // set data to jtable model
                for(int i = 0; i < tableLines.length; i++)
                {
                    String line = tableLines[i].toString().trim();
                    String[] dataRow = line.split("/");
                    model.addRow(dataRow);
                   
                }
                 JOptionPane.showMessageDialog(this, "File Successfully imported", "INFO", JOptionPane.INFORMATION_MESSAGE);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(GYM_IS.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
    }//GEN-LAST:event_import_file_menuActionPerformed

    private void exit_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_menuMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exit_menuMouseClicked
    public int getSearchPrice() {
        try {
            if (Integer.parseInt(searchField.getText()) <= 0) {
                JOptionPane.showMessageDialog(this, "Invalid Price", "Search Failed", JOptionPane.ERROR_MESSAGE);
                return 0;
            } else {
                return Integer.parseInt(searchField.getText().trim());
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Please enter a valid price", "Invalid Input", JOptionPane.ERROR_MESSAGE);
            return 0;
        }
    }
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        
        int rowCount = mainTable.getRowCount();
        int colCount = mainTable.getColumnCount();
        Object[] result = new Object[colCount];
        dm = (DefaultTableModel) mainTable.getModel();
        //deleting empty cells
        for(int o=0;o<rowCount;o++){  
            if(mainTable.getValueAt(o,1)==null){
                dm.removeRow(o);   
            }
        }
        //refreshing row count
        rowCount = mainTable.getRowCount();
        //Creating array of price column
        ArrayList<Integer> searchPrice = new ArrayList<Integer>();
        for (int i = 0; i < rowCount; i++) {  
            String value = (String) mainTable.getValueAt(i,7);
            searchPrice.add(Integer.parseInt(value));        
        }
        Integer[] arr = searchPrice.toArray(new Integer[0]);
        //sorting
        mergeSort(arr);
        if (mainTable.getRowCount() != 0) {
            if (!(getSearchPrice() <= 0)) {
                //Binary search and storing index
                int index = binarySearch(arr, 0, arr.length - 1, getSearchPrice());
                Integer[] sorted = arr;
                int r = 0;
                Object[][] res = new Object[rowCount][colCount];
                ArrayList<Integer> already = new ArrayList<Integer>();
                if (index == -1) {
                    JOptionPane.showMessageDialog(this, "Search not found.", "Search Failed", JOptionPane.ERROR_MESSAGE);
                   
                } else {
                    for (int i = 0; i < rowCount; i++) {
                        for (int j = 0; j < rowCount; j++) {
                            if (sorted[i] == Integer.parseInt(mainTable.getValueAt(j, 7).toString()) && !already.contains(j)) {
                                for (int k = 0; k < colCount; k++) {
                                    res[r][k] = mainTable.getValueAt(j, k);
                                }
                                r++;
                                already.add(j);
                            }
                        }
                    }
                    for (int i = 0; i < colCount; i++) {
                        result[i] = res[index][i].toString();
                    }
                    JOptionPane.showMessageDialog(rootPane,"Member Found!"+"\n"+ Arrays.deepToString(result),"Search Found!", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        //if no values in table
        } else {
            JOptionPane.showMessageDialog(rootPane, "No Values in the table found.", "Search Failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchButtonActionPerformed
    public static void mergeSort(Integer[] arr) {
        if (arr.length <= 1) {
            return;
        }
        Integer leftSideArray[] = new Integer[arr.length / 2];

        Integer rightSideArray[] = new Integer[arr.length - leftSideArray.length];
        for (int i = 0; i < leftSideArray.length; i++) {
            leftSideArray[i] = arr[i];
        }
        for (int j = 0; j < rightSideArray.length; j++) {
            rightSideArray[j] = arr[leftSideArray.length + j];
        }
        mergeSort(leftSideArray);
        mergeSort(rightSideArray);
        merge(leftSideArray, rightSideArray, arr);
    }
    public static void merge(Integer leftSideArray[], Integer rightSideArray[], Integer sortedArray[]) {
        int leftIndex = 0;
        int rightIndex = 0;
        int sortedIndex = 0;
        while (leftIndex < leftSideArray.length && rightIndex < rightSideArray.length) {

            if (leftSideArray[leftIndex] < rightSideArray[rightIndex]) {
                sortedArray[sortedIndex] = leftSideArray[leftIndex];
                leftIndex++;
            } else {
                sortedArray[sortedIndex] = rightSideArray[rightIndex];
                rightIndex++;
            }
            sortedIndex++;
        }
        while (leftIndex < leftSideArray.length) {
            sortedArray[sortedIndex] = leftSideArray[leftIndex];
            sortedIndex++;
            leftIndex++;
        }
        while (rightIndex < rightSideArray.length) {
            sortedArray[sortedIndex] = rightSideArray[rightIndex];
            sortedIndex++;
            rightIndex++;
        }
    }

    public static int binarySearch(Integer arr[], int low, int high, int pass) {
        int index = -1;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (pass < arr[mid]) {
                high = mid - 1;
            } else if (pass > arr[mid]) {
                low = mid + 1;
            } else {
                index = mid;
                high = mid - 1;
            }
        }
        return index;
    }
    private void ageFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ageFieldActionPerformed

    private void searchButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton2ActionPerformed
        // TODO add your handling code here:
        String catSearch = membershipCombo2.getSelectedItem().toString();
        Object[] result = new Object[mainTable.getColumnCount()];
        ArrayList<String> list = new ArrayList<String>();
        int count = 0;
        if (mainTable.getRowCount() != 0) {
            
                for (int i = 0; i < mainTable.getRowCount(); i++) {
                    String searched = (String) mainTable.getValueAt(i, 6);
                    if (catSearch.equals(searched)) {
                        
                        for (int j = 0; j < mainTable.getColumnCount(); j++) {
                            result[j] = mainTable.getValueAt(i, j);
                        }
                        count++;
                        list.add(Arrays.deepToString(result) + "\n");
                    }
                }
                if (count == 0) {
                    JOptionPane.showMessageDialog(this, "Value not found", "Search Failed", JOptionPane.ERROR_MESSAGE);
                } 
                else {
                    JOptionPane.showMessageDialog(this,count+" members found!"+"\n"+(list));
                }
            
        }
        else { 
            JOptionPane.showMessageDialog(this, "No values found in the table", "Search Failed", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_searchButton2ActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
    dm = (DefaultTableModel) mainTable.getModel();
        int select = mainTable.getSelectedRow();

        if (mainTable.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No values in the table");
        } else {
            if (select >= 0) {
                dm.removeRow(select);
                JOptionPane.showMessageDialog(this, "Selected Row Deleted", "Delete Successful", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Please select a row to delete", "Delete Failed", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void clearFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearFieldsActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_clearFieldsActionPerformed

    private void help_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_help_menuMouseClicked
        // TODO add your handling code here:
        if (Desktop.isDesktopSupported()) {
    try {
        File myFile = new File("help.pdf");
        Desktop.getDesktop().open(myFile);
    } catch (IOException ex) {
       
    }
}
    }//GEN-LAST:event_help_menuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GYM_IS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GYM_IS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GYM_IS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GYM_IS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GYM_IS().setVisible(true);
                GYM_IS loader = new GYM_IS();
                
                
            }
        
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addMember;
    private javax.swing.JPanel addMember_tab;
    private javax.swing.JPanel addPanel;
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel age;
    private javax.swing.JTextField ageField;
    private javax.swing.JPanel bossContainer;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.ButtonGroup buttonGroups2;
    private javax.swing.JButton clearFields;
    private javax.swing.JButton deleteButton;
    private javax.swing.JMenu exit_menu;
    private javax.swing.JRadioButton female;
    private javax.swing.JMenu file_menu;
    private javax.swing.JLabel gender;
    private javax.swing.JMenu help_menu;
    private javax.swing.JMenuItem import_file_menu;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTable mainTable;
    private javax.swing.JRadioButton male;
    private javax.swing.JLabel membership;
    private javax.swing.JComboBox<String> membershipCombo;
    private javax.swing.JComboBox<String> membershipCombo2;
    private javax.swing.JLabel name;
    private javax.swing.JTextField nameField;
    private javax.swing.JRadioButton other;
    private javax.swing.JLabel phonenumber;
    private javax.swing.JTextField phonenumberField;
    private javax.swing.JTextField priceField;
    private javax.swing.JLabel priceTitle;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchButton2;
    private javax.swing.JTextField searchField;
    private javax.swing.JPanel viewMember_tab;
    private javax.swing.JPanel viewPanel;
    // End of variables declaration//GEN-END:variables
}
